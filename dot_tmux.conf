#==============================================================================
# ‚ö°  Prefix key configuration
#==============================================================================

set -g prefix C-a
unbind C-b
bind-key C-a send-prefix

#==============================================================================
# ‚ö°  Shell configuration
#==============================================================================

set -g default-shell "${SHELL}"
set -g default-command "${SHELL}"

#==============================================================================
# ‚ö°  Mouse and terminal
#==============================================================================

set -g mouse on

set -g default-terminal "tmux-256color"
set -ag terminal-overrides ",xterm-256color:RGB"

set-window-option -g monitor-activity off
set-option -g      visual-activity   off
set-option -g      visual-silence    off
set-option -g      visual-bell       off
set-option -g      bell-action       none

#==============================================================================
# ‚ö°  Nested sessions
#==============================================================================

bind-key b send-prefix

#==============================================================================
# ‚ö°  Keyboard behavior
#==============================================================================

# Don't wait for an escape sequence after hitting
# Esc. fixes insert mode exit lag in vim.
set -sg escape-time 0

#==============================================================================
# ‚ö°  Clipboard / Copy / Paste
#==============================================================================

setw -g mode-keys vi

unbind [
bind v copy-mode

bind-key -T copy-mode-vi v       send-keys -X begin-selection
bind-key -T copy-mode-vi C-v     send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y       send-keys -X copy-pipe-and-cancel "xclip -selection clipboard"
bind-key -T copy-mode-vi Escape  send -X cancel
bind-key -T copy-mode-vi H       send -X start-of-line
bind-key -T copy-mode-vi L       send -X end-of-line
bind-key -T copy-mode-vi MouseDragEnd1Pane send -X copy-pipe-and-cancel "xclip -selection clipboard"

#==============================================================================
# ‚ö°  Pane and window management
#==============================================================================

bind w new-window -c "#{pane_current_path}"

# Set the name of the window initially, but then don't let tmux change it.
# The name can still be set at any time with Ctrl+a + ,
set-option -g allow-rename off

set -g base-index        1
set -g pane-base-index   1
set -g renumber-windows  on

bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

bind-key h swap-window -t -1\; select-window -t -1
bind-key l swap-window -t +1\; select-window -t +1

bind-key x kill-pane
set -g detach-on-destroy off

bind h select-pane -L
bind j select-pane -D 
bind k select-pane -U
bind l select-pane -R

bind Tab last-pane

bind -n C-M-Left  resize-pane -L 5
bind -n C-M-Right resize-pane -R 5
bind -n C-M-Up    resize-pane -U 5
bind -n C-M-Down  resize-pane -D 5

bind -n M-Left  select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up    select-pane -U
bind -n M-Down  select-pane -D

bind-key -n M-h previous-window
bind-key -n M-l next-window

set -g focus-events on

#==============================================================================
# ‚ö°  Status bar
#==============================================================================

set-option -g status-position top
set -g status-justify  left
set -g status-bg       default
set -g status-interval 2

#==============================================================================
# ‚ö°  Plugins
#==============================================================================

# christoomey/vim-tmux-navigator ----------------------------------------------
set -g @plugin 'christoomey/vim-tmux-navigator'

# laktak/extrakto -------------------------------------------------------------
set -g @plugin 'laktak/extrakto'
set-option -g @extrakto_key 'C-f'

# lost-melody/tmux-command-palette --------------------------------------------
set -g @plugin 'lost-melody/tmux-command-palette'
set -g @cmdpalette-render-cmd 'bat -l md -f -pp'

# catppuccin/tmux -------------------------------------------------------------
set -g @plugin 'catppuccin/tmux#v2.1.2'
set -g @catppuccin_flavour 'mocha'
set -g @catppuccin_window_status_style 'rounded'
set -g status-left ""
set -g status-right "#{E:@catppuccin_status_application} #{E:@catppuccin_status_session}"

# alberti42/tmux-fzf-links ---------------------------------------------------
set -g @plugin 'alberti42/tmux-fzf-links'
set-option -g @fzf-links-editor-open-cmd "tmux new-window -n 'nvim' nvim +%line '%file'"
set-option -g @fzf-links-browser-open-cmd "firefox '%url'"
set-option -g @fzf-links-key C-l

# sainnhe/tmux-fzf ------------------------------------------------------------
set -g @plugin 'sainnhe/tmux-fzf'
TMUX_FZF_LAUNCH_KEY="Tab"

# MaximilianGaedig/tmux-filter -----------------------------------------------
set -g @plugin 'MaximilianGaedig/tmux-filter'

#==============================================================================
# ‚ö°  Custom commands and bindings
#==============================================================================

# Quick TODO access -----------------------------------------------------------
bind -r T neww -c "#{pane_current_path}" "[[ -e todo.txt ]] && nvim todo.txt || nvim $HOME/Nextcloud/tasks/todo.txt"

# Clear screen ----------------------------------------------------------------
bind -n C-d send-keys C-l

# Reload Conf -----------------------------------------------------------------
bind r source-file ~/.tmux.conf \; display-message "üîÅ Tmux config reloaded!"

# Rename session --------------------------------------------------------------
bind N command-prompt -I "#S" "rename-session '%%'"

# sesh integration ------------------------------------------------------------
bind-key "t" run-shell "sesh connect \"$(
  sesh list --icons | fzf-tmux -p 80%,70% \
    --no-sort --ansi --border-label ' sesh ' --prompt '‚ö°  ' \
    --header '  ^a all ^t tmux ^g configs ^x zoxide ^d tmux kill ^f find' \
    --bind 'tab:down,btab:up' \
    --bind 'ctrl-a:change-prompt(‚ö°  )+reload(sesh list --icons)' \
    --bind 'ctrl-t:change-prompt(ü™ü  )+reload(sesh list -t --icons)' \
    --bind 'ctrl-g:change-prompt(‚öôÔ∏è  )+reload(sesh list -c --icons)' \
    --bind 'ctrl-x:change-prompt(üìÅ  )+reload(sesh list -z --icons)' \
    --bind 'ctrl-f:change-prompt(üîé  )+reload(fd -H -d 2 -t d -E .Trash . ~)' \
    --bind 'ctrl-d:execute(tmux kill-session -t {2..})+change-prompt(‚ö°  )+reload(sesh list --icons)' \
    --preview-window 'right:55%' \
    --preview 'sesh preview {}'
)\""

bind -N "last-session (via sesh) " L run-shell "sesh last"

#==============================================================================
# ‚ö°  Plugin manager bootstrap
#==============================================================================

# tmux-plugins/tpm ------------------------------------------------------------
set -g @plugin 'tmux-plugins/tpm'

# tmux-plugins/tmux-sensible --------------------------------------------------
set -g @plugin 'tmux-plugins/tmux-sensible'

if "test ! -d ~/.tmux/plugins/tpm" \
  "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm'"
run '~/.tmux/plugins/tpm/tpm'

