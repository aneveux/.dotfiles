# Remap prefix to ctrl-a for screen consistency.
    
    set -g prefix C-a
    unbind C-b
    bind-key C-a send-prefix

# Shell management.

    # Set the default shell, and set the default command to use our shell (this
    # means we source things properly, show the correct PS1 etc).
    set -g default-shell ${SHELL} 
    set -g default-command ${SHELL}

# Mouse management.

    # Enable mouse mode (tmux 2.1 and above)
    set -g mouse on

# Colour management (yikes) and alert management.

    # Use 256 colours.
    set -g default-terminal "tmux-256color"
    set -ag terminal-overrides ",xterm-256color:RGB"

    # Enable visual alerts for windows. Hide bells/silence.
    set-window-option -g monitor-activity off # highlight active windows?
    set-option -g visual-activity off        # show a message on window activity?
    set-option -g visual-silence off
    set-option -g visual-bell off
    set-option -g bell-action none

# Nested session configuration.

    # Use ^b b to send the leader to a nested session. This means if you are
    # using tmux and then ssh into a tmux session (i.e. a nested session) you
    # can run commands in the nested session with ^B b <command>.
    bind-key b send-prefix

# Keyboard Management.

    # Don't wait for an escape sequence after hitting
    # Esc. fixes insert mode exit lag in vim.
    set -sg escape-time 0

# Clipboard / Copy / Paste
# Note: This is heavily OS dependent, which is why we have separate versions
# for OSX, Ubuntu etc. I'm trying out tmux-yank for this but it is still work in
# progress.

    set-option -g set-clipboard on
    #bind P paste-buffer

    # Use vim keybindings in copy mode
    setw -g mode-keys vi

    # Setup 'v' begin/end selection as in Vim.
    bind-key -T copy-mode-vi v send-keys -X begin-selection
    bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
    bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel

# Pane and Window Management.

    # Open new panes and splits in the same working directory.
    bind c new-window -c "#{pane_current_path}"

    # Set the name of the window initially, but then don't let tmux change it.
    # The name can still be set at any time with Ctrl+a + ,
    set-option -g allow-rename off

    # Start windows and panes at 1.
    set -g base-index 1
    set -g pane-base-index 1
    set-window-option -g pane-base-index 1

    # When we add/remove windows, renumber them in sequential order.
    set -g renumber-windows on

    # Split panes using | and -
    bind | split-window -h -c "#{pane_current_path}"
    bind - split-window -v -c "#{pane_current_path}"

    # Ctrl+B h/l to swap windows left/right, i.e. moving the tabs around.
    bind-key h swap-window -t -1\; select-window -t -1
    bind-key l swap-window -t +1\; select-window -t +1

    bind-key x kill-pane # skip "kill-pane 1? (y/n)" prompt
    set -g detach-on-destroy off  # don't exit from tmux when closing a session

# Vim style pane selection

    bind h select-pane -L
    bind j select-pane -D 
    bind k select-pane -U
    bind l select-pane -R

# Resize panes 

    bind -n C-M-Left  resize-pane -L 5  # Resize pane 5 cells to the left
    bind -n C-M-Right resize-pane -R 5  # Resize pane 5 cells to the right
    bind -n C-M-Up    resize-pane -U 5  # Resize pane 5 cells upwards
    bind -n C-M-Down  resize-pane -D 5  # Resize pane 5 cells downwards

# Use Alt-arrow keys without prefix key to switch panes

    bind -n M-Left select-pane -L
    bind -n M-Right select-pane -R
    bind -n M-Up select-pane -U
    bind -n M-Down select-pane -D

    # Meta + h/l to cycle through tabs.
    bind-key -n M-h previous-window
    bind-key -n M-l next-window

    # Enable focus events, which are needed to keep vim's focus events working when
    # vim is running inside tmux.
    set -g focus-events on

## Status bar design
    set-option -g status-position top

    set -g status-justify left
    set -g status-bg default
    set -g status-interval 2

# List of plugins

    set -g @plugin 'tmux-plugins/tpm'
    set -g @plugin 'tmux-plugins/tmux-sensible'
    set -g @plugin 'christoomey/vim-tmux-navigator'
 
# Catppuccin theme

    set -g @plugin 'catppuccin/tmux#v2.1.2'
    set -g @catppuccin_flavour 'mocha'
    set -g @catppuccin_window_status_style "rounded"
    set -g status-left ""
    set -g status-right "#{E:@catppuccin_status_application} #{E:@catppuccin_status_session}"

# todo manager
    bind -r D neww -c "#{pane_current_path}" "[[ -e TODO.md ]] && nvim TODO.md || nvim ~/TODO.md"

# clear screen 
    bind -n C-d send-keys C-l

# fzf

set -g @plugin 'sainnhe/tmux-fzf'
set -g @plugin 'wfxr/tmux-fzf-url'
set -g @fzf-url-history-limit '2000'
set -g @fzf-url-fzf-options '-w 50% -h 50% --multi -0 --no-preview --no-border'
set -g @fzf-url-open "firefox"

# sesh 

    bind-key "t" run-shell "sesh connect \"$(
      sesh list --icons | fzf-tmux -p 80%,70% \
        --no-sort --ansi --border-label ' sesh ' --prompt '‚ö°  ' \
        --header '  ^a all ^t tmux ^g configs ^x zoxide ^d tmux kill ^f find' \
        --bind 'tab:down,btab:up' \
        --bind 'ctrl-a:change-prompt(‚ö°  )+reload(sesh list --icons)' \
        --bind 'ctrl-t:change-prompt(ü™ü  )+reload(sesh list -t --icons)' \
        --bind 'ctrl-g:change-prompt(‚öôÔ∏è  )+reload(sesh list -c --icons)' \
        --bind 'ctrl-x:change-prompt(üìÅ  )+reload(sesh list -z --icons)' \
        --bind 'ctrl-f:change-prompt(üîé  )+reload(fd -H -d 2 -t d -E .Trash . ~)' \
        --bind 'ctrl-d:execute(tmux kill-session -t {2..})+change-prompt(‚ö°  )+reload(sesh list --icons)' \
        --preview-window 'right:55%' \
        --preview 'sesh preview {}'
    )\""
    
    bind -N "last-session (via sesh) " L run-shell "sesh last"

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
    run '~/.tmux/plugins/tpm/tpm'
